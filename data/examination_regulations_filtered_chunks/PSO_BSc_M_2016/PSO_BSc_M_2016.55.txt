Pruefungs- und Studienordnung des Bachelorstudiengangs Mathematik vom 12. Februar 2018
ogrammieren
     im Team, Debugging, Profiling)
   • weiterführende Themen der Programmierung in einer objektorientierten Pro-
     grammiersprache (GUI, Exceptions, Threads, Typvariablen)

Vorkenntnisse           Einführung in die EDV, Algorithmen und Programmierung
Prüfung                Die Modulprüfung besteht aus dem Erwerb eines unbeno-
                        teten Übungsscheines. Die Kriterien für den Erhalt eines
                        Übungsscheines legt der Dozent in der ersten Vorlesungs-
                        woche fest. Erfolgt keine Festlegung, so sind 50 % der
                        Übungsaufgaben erfolgreich zu bearbeiten.
Note                    unbenotet
Aufwand in h            270 (Vorlesung: 60, Übung: 30, Selbststudium: 180)
Leistungspunkte         9
Modulart                Nebenfachmodul




                                      52
Modul I3: Datenstrukturen und effiziente Algorithmen
Verantwortlicher           Professuren Informatik
Lehrformen                 Vorlesung (4 SWS) und Übung (2 SWS)
Dauer/Turnus               1 Sem., jährlich im WS
Qualifikationsziele
   • Überblick über wichtige komplexere algorithmische Probleme und Datenstruktu-
     ren,
   • Fähigkeit zur Analyse ihrer Leistungsfähigkeit,
   • Verständnis für die grundsätzlichen Schwierigkeiten beim Entwurf von Algorith-
     men für NP-schwere Probleme,
   • Kompetenz zum selbständigen Entwurf und der Analyse von Algorithmen für sol-
     che Probleme,
   • Fähigkeit zum Verwenden von online verfügbaren Quelltextbibliotheken.

Inhalt
   • komplexere Datenstrukturen und deren Analyse (Hashing, Heaps,
     höhenbalancierte Suchbäume)
   • Algorithmen zur Suche in Strings
   • fortgeschrittene Analysetechniken (amortisierte Analyse)
   • Probleme der kombinatorischen Optimierung (kürzeste Wege in Netzwerken, mi-
     nimale Spannbäume, Matchings, Netzwerkfluss)
   • Strategien zur Lösung NP-schwerer Probleme (Approximationsalgorithmen, pa-
     r