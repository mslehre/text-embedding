from os import path

from flask import Flask, render_template, request

app = Flask(__name__)
@app.route('/')
def home() -> str:
    """This function is called when the user opens the website. It returns the
    website.  

    Returns: 
        str: A string is returned that contains html code for a web form that
            contains text field where the user can ask any question about the 
            examination regulations in the text corpus. If the button 
            'get answer' is pressed, the answer from the LLM is displayed. The
            answer is generated using the best 5 hits from the text corpus 
            chunks. It also displays the text chunks that were used to generate
            the answer.
    """
    return render_template("PSO_website.html")

@app.route('/result', methods=['POST', 'GET'])
def get_answer_for_question() -> str:
    """This function selects the 5 most similiar chunks for the question and 
    displayes the answer that was given from the LLM based on the chunks.

    Returns: 
        str: A string is returned that contains html code for a web form that
            contains the question and the answer that was generated by the LLM.    
    """
    # Get the question from the 'PSO_website.html' form
    question = request.form['question']
    # Get the 5 best text chunk IDs from the examination regulations chunks 
    # directory
    ids = ['PSO1','PSO2'] #TODO: get chunks
        
    text = ""
    # Test if embeddings and cosine similarity could be computed.
    if (similarity is None):
        text += "For at least one of your inserted texts no embedding " + \
                "could be computed. Probably, the openai api key is not " + \
                "valid or set as an environment variable. Therefore, the " + \
                "similarity of the texts cannot be computed."
    else: 
        # Display cosine similarity since embeddings could be computed.
        text += "The cosine similarity of the two texts you inserted is " + \
            str(similarity) + "."
    texts_start = []
    for string in [text1, text2]:
        words = string.split()[:100]
        texts_start.append(" ".join(words))
    return render_template("displaySimilarity.html", text1=texts_start[0], 
                           text2=texts_start[1], text=text)

if __name__ == '__main__':
    app.run(debug=True)
